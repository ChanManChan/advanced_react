{"version":3,"sources":["containers/LoginPage/meta/selectors.js","containers/VacationsContainer/meta/selectors.js","containers/NavigationContainer/meta/styles.js","containers/NavigationContainer/components/NavItem.js","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","common/DynamicComponent.js","containers/VacationsContainer/dynamic.js","containers/VacationDetailsContainer/dynamic.js","containers/LoginPage/dynamic.js","containers/ProfileContainer/dynamic.js","containers/NavigationContainer/components/Navigation.js","utils/cookies.js","containers/AuthContainer/meta/reducer.js","containers/AuthContainer/meta/selectors.js","containers/NavigationContainer/index.js","containers/App/meta/actions.js","containers/App/meta/constants.js","utils/languageDefaults.js","containers/App/meta/theme.js","containers/App/meta/reducer.js","containers/App/meta/selectors.js","containers/App/index.js","store/reducer.js","utils/network.js","utils/environment.js","utils/endpoint.js","containers/AuthContainer/meta/saga.js","containers/VacationsContainer/meta/saga.js","containers/ProfileContainer/meta/saga.js","containers/VacationDetailsContainer/meta/saga.js","store/saga.js","store/store.js","index.js","containers/VacationsContainer/meta/constants.js","containers/ProfileContainer/meta/constants.js","containers/AuthContainer/meta/constants.js","containers/VacationDetailsContainer/meta/constants.js","containers/AuthContainer/meta/actions.js","containers/VacationsContainer/meta/actions.js","containers/LoginPage/meta/reducer.js","containers/VacationsContainer/meta/reducer.js","containers/ProfileContainer/meta/actions.js","containers/VacationDetailsContainer/meta/actions.js","containers/LoginPage/meta/constants.js","containers/ProfileContainer/meta/reducer.js","containers/VacationDetailsContainer/meta/reducer.js"],"names":["selectLoginPageDomain","state","loginPage","initialState","makeSelectLoginPage","createSelector","substate","select","vacations","selectVacations","makeSelectVacations","console","log","map","vacation","price","showDiscounts","selectDiscounts","discounts","selectSelectedVacation","selectedVacation","styles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","title","sideBarLink","textDecoration","memo","item","selectedKey","icon","onClick","ListItem","button","selected","key","aria-selected","ListItemIcon","ListItemText","primary","text","PrivateRoute","path","Component","exact","isAuthenticated","component","to","PublicRoute","DynamicComponent","dynamicImport","React","lazy","props","Suspense","fallback","CircularProgress","dynamic","useStyles","icons","home","routes","user","logout","updateThemeMode","classes","useTheme","useState","open","setOpen","items","setItems","setSelectedKey","mode","setMode","useEffect","drawerItems","route","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","edge","Typography","variant","noWrap","Switch","checked","onChange","name","inputProps","username","Button","Drawer","anchor","paper","direction","Divider","List","index","VacationsContainer","LoginPage","ProfileContainer","VacationDetailsContainer","Cookies","defaults","expires","userString","domain","window","location","hostname","saveDataToStorage","token","tokenExpiryTime","set","JSON","stringify","clearDataFromStorage","remove","getDataFromStorage","get","parse","Auth","action","produce","draft","type","constants","payload","getAuth","auth","getUser","selectIsAuthenticated","mapDispatchToProps","NavigationContainer","connect","Navigation","localeData","fontFamily","getTheme","createMuiTheme","palette","blue","secondary","red","error","light","main","dark","contrastText","tonalOffset","typography","appReducer","selectTheme","app","getApp","withConnect","compose","ThemeProvider","combineReducers","profile","vacationDetails","axios","interceptors","response","use","data","network","postData","getData","putData","deleteData","baseUrl","headers","Authorization","body","url","config","post","params","put","delete","setCredentials","networkService","URLS","AUTHENTICATE","subUrl","USER_DATA","GET_VACATIONS","GET_PROFILE","getEndpointURL","finalUrl","urlKey","length","handleGetAuth","handleLogout","request","password","call","actions","all","takeLatest","handleGetVacations","handleUpdateShowDiscounts","handleSelectedVacation","vacationId","handleGetProfile","handleUpdateUserStatusChange","handleGetVacationDetails","find","id","saga","authSaga","vacationsSaga","profileSaga","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","rootReducer","applyMiddleware","run","rootSaga","ReactDOM","render","document","getElementById","GET_VACATIONS_SUCCESS","GET_VACATIONS_ERROR","UPDATE_SHOW_DISCOUNTS","UPDATE_SHOW_DISCOUNTS_SUCCESS","UPDATE_SELECTED_VACATION","SELECTED_VACATION","GET_PROFILE_SUCCESS","GET_PROFILE_ERROR","UPDATE_USER_STATUS","UPDATE_USER_STATUS_SUCCESS","GET_AUTH","GET_AUTH_SUCCESS","GET_AUTH_ERROR","LOGOUT","GET_VACATIONDETAILS","GET_VACATIONDETAILS_SUCCESS","GET_VACATIONDETAILS_ERROR","getAuthSuccess","getAuthError","getVacations","getVacationsSuccess","getVacationsError","updateShowDiscounts","updateShowDiscountsSuccess","updateSelectedVacation","getSelectedVacation","loginPageReducer","LOGIN_FIELD_CHANGE","fieldName","value","Vacations","getProfile","getProfileSuccess","getProfileError","updateUserStatus","updateUserStatusSuccess","getVacationDetails","getVacationDetailsSuccess","getVacationDetailsError","DEFAULT_ACTION","statuses","orders","status","Profile","VacationDetails"],"mappings":"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","file":"static/js/main.8d531cb0.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\n/**\n * Direct selector to the loginPage state domain\n */\n\nconst selectLoginPageDomain = (state) => state.loginPage || initialState;\n\n/**\n * Other specific selectors\n */\n\n/**\n * Default selector used by LoginPage\n */\n\nconst makeSelectLoginPage = () =>\n  createSelector(selectLoginPageDomain, (substate) => substate);\n\nconst makeSelectLoginPagePassword = () =>\n  createSelector(selectLoginPageDomain, (substate) => substate.password);\n\nconst makeSelectLoginPageUsername = () =>\n  createSelector(selectLoginPageDomain, (substate) => substate.username);\n\nexport default makeSelectLoginPage;\n\nexport {\n  selectLoginPageDomain,\n  makeSelectLoginPagePassword,\n  makeSelectLoginPageUsername,\n};\n","import { initialState } from './reducer';\nimport { createSelector } from 'reselect';\n\n/**\n * Get Vacations\n * @param state\n * @returns {Object}\n */\n\nexport const select = (state) => state.vacations || initialState;\n\nexport const selectVacations = (state) => select(state).vacations;\n\n//! MEMOIZING SELECTORS\n// I would like to execute this \"makeSelectVacations\" logic only when the \"vacations\" object change\nexport const makeSelectVacations = createSelector(\n  selectVacations,\n  (vacations) => {\n    console.log('TESTING FROM CREATE_SELECTOR');\n    return vacations.map((vacation) => ({\n      ...vacation,\n      price: vacation.price + 10,\n    }));\n  }\n);\n\nexport const showDiscounts = (state) => select(state).showDiscounts;\n\nexport const selectDiscounts = (state) => select(state).discounts;\n\nexport const selectSelectedVacation = (state) => select(state).selectedVacation;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nexport const styles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  sideBarLink: {\n    textDecoration: 'none',\n  },\n}));\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\n\nconst NavItem = ({ item, selectedKey, icon, onClick }) => {\n  return (\n    <ListItem\n      button\n      onClick={onClick}\n      selected={selectedKey === item.key}\n      aria-selected={selectedKey === item.key}\n      key={item.key}\n    >\n      <ListItemIcon>{icon}</ListItemIcon>\n      <ListItemText primary={item.text} />\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  item: PropTypes.object,\n  selectedKey: PropTypes.string,\n  icon: PropTypes.object,\n  onClick: PropTypes.func,\n};\n\nexport default memo(NavItem);\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PrivateRoute = ({ path, Component, exact, isAuthenticated }) => {\r\n  if (isAuthenticated)\r\n    return <Route component={Component} exact={exact} path={path} />;\r\n  else return <Redirect to='/login' />;\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  path: PropTypes.string,\r\n  Component: PropTypes.object,\r\n  exact: PropTypes.bool,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PublicRoute = ({ path, Component, exact, isAuthenticated }) => {\r\n  if (isAuthenticated) return <Redirect to='/' />;\r\n  else return <Route component={Component} exact={exact} path={path} />;\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  path: PropTypes.string,\r\n  Component: PropTypes.object,\r\n  exact: PropTypes.bool,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst DynamicComponent = (dynamicImport) => {\r\n  const Component = React.lazy(dynamicImport);\r\n\r\n  return (props) => (\r\n    <React.Suspense fallback={<CircularProgress />}>\r\n      <Component {...props} />\r\n    </React.Suspense>\r\n  );\r\n};\r\n\r\nDynamicComponent.propTypes = {\r\n  dynamicImport: PropTypes.func,\r\n};\r\n\r\nexport default DynamicComponent;\r\n","import DynamicComponent from '../../common/DynamicComponent';\r\n\r\nconst dynamic = DynamicComponent(() =>\r\n  import(/* webpackChunkName: \"vacations\" */ 'containers/VacationsContainer')\r\n);\r\n\r\nexport default dynamic;\r\n","import DynamicComponent from '../../common/DynamicComponent';\r\n\r\nconst dynamic = DynamicComponent(() =>\r\n  import(\r\n    /* webpackChunkName: \"vacationDetails\" */ 'containers/VacationDetailsContainer'\r\n  )\r\n);\r\n\r\nexport default dynamic;\r\n","import DynamicComponent from '../../common/DynamicComponent';\r\n\r\nconst dynamic = DynamicComponent(() =>\r\n  import(/* webpackChunkName: \"login\" */ 'containers/LoginPage')\r\n);\r\n\r\nexport default dynamic;\r\n","import DynamicComponent from '../../common/DynamicComponent';\r\n\r\nconst dynamic = DynamicComponent(() =>\r\n  import(/* webpackChunkName: \"profile\" */ 'containers/ProfileContainer')\r\n);\r\n\r\nexport default dynamic;\r\n","import React, { memo, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport VacationsIcon from '@material-ui/icons/AirplanemodeActive';\nimport ExitIcon from '@material-ui/icons/ExitToApp';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { styles } from '../meta/styles';\nimport NavItem from './NavItem';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport PropTypes from 'prop-types';\nimport { Switch as RouterSwitch, Link } from 'react-router-dom';\n//! Routes\nimport PrivateRoute from 'components/Routes/PrivateRoute';\nimport PublicRoute from 'components/Routes/PublicRoute';\n//! Modules\nimport VacationsContainer from 'containers/VacationsContainer/dynamic';\nimport VacationDetailsContainer from 'containers/VacationDetailsContainer/dynamic';\nimport LoginPage from 'containers/LoginPage/dynamic';\nimport ProfileContainer from 'containers/ProfileContainer/dynamic';\n\n//! Modules (To load them dynamically, remove these modules from here) <- So now when this components loads, we'll not import these modules\n// import VacationsContainer from 'containers/VacationsContainer';\n// import LoginPage from 'containers/LoginPage';\n// import ProfileContainer from 'containers/ProfileContainer';\n// import VacationDetails from 'containers/VacationDetailsContainer';\n\nconst useStyles = styles;\n\nconst icons = {\n  home: <HomeIcon />,\n  vacations: <VacationsIcon />,\n};\n\nfunction Navigation({\n  routes,\n  user,\n  logout,\n  updateThemeMode,\n  isAuthenticated,\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [items, setItems] = React.useState([]);\n  const [selectedKey, setSelectedKey] = React.useState(routes[0].key);\n  const [mode, setMode] = React.useState('light');\n\n  useEffect(() => {\n    const drawerItems = routes.map((route) => (\n      <Link to={route.path} className={classes.sideBarLink}>\n        <NavItem\n          onClick={() => setSelectedKey(route.key)}\n          selectedKey={selectedKey}\n          icon={icons[route.key]}\n          item={route}\n        />\n      </Link>\n    ));\n    setItems(drawerItems);\n  }, [routes, selectedKey]);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const changeMode = () => {\n    if (mode === 'dark') {\n      updateThemeMode('light');\n      setMode('light');\n    } else {\n      updateThemeMode('dark');\n      setMode('dark');\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position='fixed'\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            edge='start'\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant='h6' noWrap className={classes.title}>\n            Vacations\n          </Typography>\n          <Switch\n            checked={mode === 'dark'}\n            onChange={changeMode}\n            color='secondary'\n            name='checkedB'\n            inputProps={{ 'arial-label': 'primary checkbox' }}\n          />\n          {user && (\n            <>\n              <Typography variant='h6' noWrap>\n                {user.username}\n              </Typography>\n              <Button onClick={logout} color='inherit'>\n                Sign Out\n              </Button>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant='persistent'\n        anchor='left'\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{items}</List>\n        <Divider />\n        <List>\n          {['Sign Out'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{<ExitIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {/* Lazy loading */}\n        {/* Dynamically Load Modules */}\n        {/* Should be default export */}\n        {/* Telling webpack to split all these modules into separate bundle files */}\n        <RouterSwitch>\n          <PrivateRoute\n            exact\n            path='/'\n            Component={VacationsContainer}\n            isAuthenticated={isAuthenticated}\n          />\n          <PublicRoute\n            exact\n            path='/login'\n            Component={LoginPage}\n            isAuthenticated={isAuthenticated}\n          />\n          <PrivateRoute\n            exact\n            path='/profile'\n            Component={ProfileContainer}\n            isAuthenticated={isAuthenticated}\n          />\n          <PrivateRoute\n            exact\n            path='/vacation/:id'\n            Component={VacationDetailsContainer}\n            isAuthenticated={isAuthenticated}\n          />\n        </RouterSwitch>\n      </main>\n    </div>\n  );\n}\n\nNavigation.propTypes = {\n  isAuthenticated: PropTypes.bool,\n};\n\nexport default memo(Navigation);\n","import Cookies from 'js-cookie';\n\n/**\n * save auth data to storage\n * clear auth data from storage\n * get auth data from storage\n */\n\nCookies.defaults.expires = 1;\n\nconst domain = window.location.hostname;\n\nconst path = '';\n\n// save auth data to storage\nexport const saveDataToStorage = ({ token, tokenExpiryTime, user }) => {\n  Cookies.set('token', token, { domain, path });\n  Cookies.set('user', JSON.stringify(user), { domain, path });\n  // Cookies.set('tokenExpiryTime', tokenExpiryTime, { domain, path });\n};\n\n// clear auth data from storage\nexport const clearDataFromStorage = () => {\n  Cookies.remove('token', { domain, path });\n  Cookies.remove('user', { domain, path });\n  // Cookies.remove('tokenExpiryTime', { domain, path });\n};\n\n// get auth data from storage\nexport const getDataFromStorage = () => ({\n  token: Cookies.get('token', { domain, path }),\n  user: Cookies.get('user', { domain, path }),\n  // tokenExpiryTime: Cookies.get('tokenExpiryTime', { domain, path }),\n});\n","import produce from 'immer';\nimport * as constants from './constants';\nimport { getDataFromStorage } from 'utils/cookies';\n\nconst { token, user } = getDataFromStorage();\n\nconst getUser = (userString) => userString && JSON.parse(userString);\n\nexport const initialState = {\n  token,\n  user: getUser(user),\n  isAuthenticated: !!token,\n};\n\n/* eslint-disable no-param-reassign */\nconst Auth = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case constants.GET_AUTH_SUCCESS:\n        draft.token = action.payload.token;\n        draft.user = action.payload.user;\n        draft.isAuthenticated = true;\n        break;\n      case constants.LOGOUT:\n        delete draft.token;\n        delete draft.user;\n        draft.isAuthenticated = false;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default Auth;\n","import { initialState } from './reducer';\n/**\n * Get Auth\n * @param state\n * @returns {Object}\n */\nexport const getAuth = (state) => state.auth || initialState;\n\nexport const getUser = (state) => getAuth(state).user;\n\nexport const selectIsAuthenticated = (state) => getAuth(state).isAuthenticated;\n","import { connect } from 'react-redux';\nimport Navigation from './components/Navigation';\nimport { logout } from 'containers/AuthContainer/meta/actions';\nimport { getUser } from 'containers/AuthContainer/meta/selectors';\nimport { updateThemeMode } from 'containers/App/meta/actions';\nimport { selectIsAuthenticated } from 'containers/AuthContainer/meta/selectors';\n\nconst mapStateToProps = (state) => ({\n  routes: [\n    { key: 'vacations', path: '/', text: 'Vacations' },\n    { key: 'profile', path: '/profile', text: 'Profile' },\n  ],\n  user: getUser(state),\n  isAuthenticated: selectIsAuthenticated(state),\n});\n\nconst mapDispatchToProps = {\n  logout,\n  updateThemeMode,\n};\n\nconst NavigationContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Navigation);\n\nexport default NavigationContainer;\n","import * as constants from './constants';\r\n\r\nexport const updateThemeMode = (payload) => ({\r\n  type: constants.UPDATE_THEME_MODE,\r\n  payload,\r\n});\r\n","export const UPDATE_THEME_MODE = 'UPDATE_THEME_MODE';\n","export const DEFAULT_LOCALE = 'en';\n\nexport const localeData = {\n  en: {\n    fontFamily: 'Ubuntu',\n    direction: 'ltr',\n  },\n};\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport red from '@material-ui/core/colors/red';\nimport { localeData } from '../../../utils/languageDefaults';\n\nexport const getTheme = (\n  type = 'light',\n  fontFamily = localeData.en.fontFamily\n) =>\n  createMuiTheme({\n    palette: {\n      type,\n      primary: blue,\n      secondary: red,\n      error: {\n        light: '#e57373',\n        main: '#f44336',\n        dark: '#d32f2f',\n        contrastText: '#fff',\n      },\n      tonalOffset: 0.1,\n    },\n    typography: {\n      fontFamily,\n    },\n  });\n","/* eslint-disable no-param-reassign */\nimport produce from 'immer';\nimport { getTheme } from './theme';\nimport * as constants from './constants';\n\nexport const initialState = {\n  theme: getTheme(),\n};\n\nconst appReducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case constants.UPDATE_THEME_MODE:\n        // 'light' or 'dark'\n        draft.theme = getTheme(action.payload);\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default appReducer;\n","import { initialState } from './reducer';\n\nconst getApp = state => state.app || initialState;\n\nconst selectTheme = state => getApp(state).theme;\n\nexport { selectTheme };\n","/**\n *\n * App.js\n *\n * This component is the skeleton around the actual pages, and should only\n * contain code that should be seen on all pages. (e.g. navigation bar)\n *\n */\n\nimport React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport NavigationContainer from 'containers/NavigationContainer';\nimport { selectTheme } from './meta/selectors';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from '@material-ui/core';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App({ theme }) {\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <NavigationContainer />\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nApp.propTypes = {\n  theme: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n  theme: selectTheme(state),\n});\n\nconst withConnect = connect(mapStateToProps);\n\nexport default compose(withConnect)(App);\n","import { combineReducers } from 'redux';\nimport app from '../containers/App/meta/reducer';\nimport loginPage from '../containers/LoginPage/meta/reducer';\nimport auth from 'containers/AuthContainer/meta/reducer';\nimport vacations from 'containers/VacationsContainer/meta/reducer';\nimport profile from 'containers/ProfileContainer/meta/reducer';\nimport vacationDetails from 'containers/VacationDetailsContainer/meta/reducer';\n\nexport default combineReducers({\n  loginPage,\n  app,\n  auth,\n  profile,\n  vacations,\n  vacationDetails,\n});\n","import axios from 'axios';\nimport { BASE_URL } from './environment';\nimport { getDataFromStorage } from './cookies';\n\naxios.interceptors.response.use((response) => response.data);\n\nfunction networkService() {\n  const { token } = getDataFromStorage();\n  const baseUrl = BASE_URL;\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n\n  function setCredentials(token) {\n    headers.Authorization = `Bearer ${token}`;\n  }\n\n  function* postData(action, body) {\n    const url = baseUrl + action;\n    const config = { headers };\n    return yield axios.post(url, body, config);\n  }\n\n  function* getData(action, params) {\n    const url = baseUrl + action;\n    const config = { headers, params };\n    return yield axios.get(url, config);\n  }\n\n  function* putData(action, body) {\n    const url = baseUrl + action;\n    const config = { headers };\n    return yield axios.put(url, body, config);\n  }\n\n  function* deleteData(action) {\n    const url = baseUrl + action;\n    const config = { headers };\n    return yield axios.delete(url, config);\n  }\n\n  return {\n    setCredentials,\n    getData,\n    postData,\n    putData,\n    deleteData,\n  };\n}\n\nconst network = networkService();\n\nexport default network;\n","let BASE_URL = 'http://localhost:9000/';\n\nexport {BASE_URL};\n","export const URLS = {\n  AUTHENTICATE: { url: 'auth', subUrl: '' },\n  USER_DATA: { url: 'users', subUrl: 'me' },\n  GET_VACATIONS: { url: 'vacations' },\n  GET_PROFILE: { url: 'profile' },\n};\n\nexport const getEndpointURL = (key) => {\n  let finalUrl = '';\n  if (key && URLS[key]) {\n    const urlKey = URLS[key];\n    if (urlKey.url) {\n      finalUrl = urlKey.url;\n    }\n    if (urlKey.subUrl && urlKey.subUrl.length > 0) {\n      finalUrl += `/${urlKey.subUrl}`;\n    }\n  }\n  return finalUrl;\n};\n","import { all, takeLatest, put, call, select } from 'redux-saga/effects';\nimport * as constants from './constants';\nimport * as actions from './actions';\nimport network from 'utils/network';\nimport { getEndpointURL } from 'utils/endpoint';\nimport makeSelectLoginPage from '../../LoginPage/meta/selectors';\nimport { saveDataToStorage, clearDataFromStorage } from 'utils/cookies';\n\nfunction* handleGetAuth() {\n  try {\n    //! ENTIRE LOGIN_PAGE STATE\n    const loginPage = yield select(makeSelectLoginPage());\n    const request = {\n      username: loginPage.username,\n      password: loginPage.password,\n    };\n    const action = getEndpointURL('AUTHENTICATE');\n    const response = yield call(network.postData, action, request);\n    yield call(saveDataToStorage, response);\n    yield put(actions.getAuthSuccess(response));\n  } catch (error) {\n    yield put(actions.getAuthError(error));\n  }\n}\n\nfunction* handleLogout() {\n  yield call(clearDataFromStorage);\n}\n\nexport default function* () {\n  yield all([\n    yield takeLatest(constants.GET_AUTH, handleGetAuth),\n    yield takeLatest(constants.LOGOUT, handleLogout),\n  ]);\n}\n","import { all, takeLatest, put, call } from 'redux-saga/effects';\nimport * as constants from './constants';\nimport * as actions from './actions';\nimport network from 'utils/network';\nimport { getEndpointURL } from 'utils/endpoint';\n\nfunction* handleGetVacations() {\n  try {\n    const action = getEndpointURL('GET_VACATIONS');\n    const response = yield call(network.getData, action);\n    yield put(actions.getVacationsSuccess(response));\n  } catch (error) {\n    yield put(actions.getVacationsError(error));\n  }\n}\n\nfunction* handleUpdateShowDiscounts() {\n  try {\n    yield put(actions.updateShowDiscountsSuccess());\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* handleSelectedVacation(action) {\n  try {\n    yield put(actions.getSelectedVacation(action.vacationId));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default function* () {\n  yield all([\n    yield takeLatest(constants.GET_VACATIONS, handleGetVacations),\n    yield takeLatest(\n      constants.UPDATE_SHOW_DISCOUNTS,\n      handleUpdateShowDiscounts\n    ),\n    yield takeLatest(\n      constants.UPDATE_SELECTED_VACATION,\n      handleSelectedVacation\n    ),\n  ]);\n}\n","import { all, takeLatest, put, call } from 'redux-saga/effects';\nimport * as constants from './constants';\nimport * as actions from './actions';\nimport { getEndpointURL } from 'utils/endpoint';\nimport network from 'utils/network';\n\nfunction* handleGetProfile() {\n  try {\n    const action = getEndpointURL('GET_PROFILE');\n    const response = yield call(network.getData, action);\n    yield put(actions.getProfileSuccess(response));\n  } catch (error) {\n    yield put(actions.getProfileError(error));\n  }\n}\n\nfunction* handleUpdateUserStatusChange() {\n  try {\n    yield put(actions.updateUserStatusSuccess());\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default function* () {\n  yield all([\n    yield takeLatest(constants.GET_PROFILE, handleGetProfile),\n    yield takeLatest(\n      constants.UPDATE_USER_STATUS,\n      handleUpdateUserStatusChange\n    ),\n  ]);\n}\n","import { all, takeLatest, put, call, select } from 'redux-saga/effects';\nimport * as constants from './constants';\nimport * as actions from './actions';\nimport { selectVacations } from 'containers/VacationsContainer/meta/selectors';\n// import {getData} from \"utils/network\";\n\nfunction* handleGetVacationDetails(action) {\n  try {\n    // select all vacations\n    const vacations = yield select(selectVacations);\n    // Find the spacific vacation\n    const vacation = vacations.find(\n      (vacation) => vacation.id === action.vacationId\n    );\n    // pass the vacation to the succes action\n    yield put(actions.getVacationDetailsSuccess(vacation));\n  } catch (error) {\n    yield put(actions.getVacationDetailsError(error));\n  }\n}\n\nexport default function* () {\n  yield all([\n    yield takeLatest(constants.GET_VACATIONDETAILS, handleGetVacationDetails),\n  ]);\n}\n","import { all } from 'redux-saga/effects';\nimport authSaga from 'containers/AuthContainer/meta/saga';\nimport vacationsSaga from 'containers/VacationsContainer/meta/saga';\nimport profileSaga from 'containers/ProfileContainer/meta/saga';\nimport vacationDetails from 'containers/VacationDetailsContainer/meta/saga';\n\nexport default function* saga() {\n  yield all([authSaga(), vacationsSaga(), profileSaga(), vacationDetails()]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducer';\nimport rootSaga from './saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\nsagaMiddleware.run(rootSaga);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport store from './store/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","export const GET_VACATIONS = 'GET_VACATIONS';\nexport const GET_VACATIONS_SUCCESS = 'GET_VACATIONS_SUCCESS';\nexport const GET_VACATIONS_ERROR = 'GET_VACATIONS_ERROR';\n\nexport const UPDATE_SHOW_DISCOUNTS = 'UPDATE_SHOW_DISCOUNTS';\n\nexport const UPDATE_SHOW_DISCOUNTS_SUCCESS = 'UPDATE_SHOW_DISCOUNTS_SUCCESS';\n\nexport const UPDATE_SELECTED_VACATION = 'UPDATE_SELECTED_VACATION';\n\nexport const SELECTED_VACATION = 'SELECTED_VACATION';\n","export const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILE_SUCCESS = 'GET_PROFILE_SUCCESS';\nexport const GET_PROFILE_ERROR = 'GET_PROFILE_ERROR';\nexport const UPDATE_USER_STATUS = 'UPDATE_USER_STATUS';\nexport const UPDATE_USER_STATUS_SUCCESS = 'UPDATE_USER_STATUS_SUCCESS';\n","export const GET_AUTH = 'GET_AUTH';\nexport const GET_AUTH_SUCCESS = 'GET_AUTH_SUCCESS';\nexport const GET_AUTH_ERROR = 'GET_AUTH_ERROR';\nexport const LOGOUT = \"LOGOUT\";","export const GET_VACATIONDETAILS = 'GET_VACATIONDETAILS';\nexport const GET_VACATIONDETAILS_SUCCESS = 'GET_VACATIONDETAILS_SUCCESS';\nexport const GET_VACATIONDETAILS_ERROR = 'GET_VACATIONDETAILS_ERROR';\n","import * as constants from \"./constants\";\n\n\nexport const getAuth = () => ({\n    type: constants.GET_AUTH,\n});\n\nexport const getAuthSuccess = payload => ({\n    type: constants.GET_AUTH_SUCCESS,\n    payload,\n});\n\nexport const getAuthError = payload => ({\n    type: constants.GET_AUTH_ERROR,\n    payload,\n});\n\nexport const logout = () => ({\n    type: constants.LOGOUT\n})","import * as constants from './constants';\n\nexport const getVacations = () => ({\n  type: constants.GET_VACATIONS,\n});\n\nexport const getVacationsSuccess = (payload) => ({\n  type: constants.GET_VACATIONS_SUCCESS,\n  payload,\n});\n\nexport const getVacationsError = (payload) => ({\n  type: constants.GET_VACATIONS_ERROR,\n  payload,\n});\n\nexport const updateShowDiscounts = () => ({\n  type: constants.UPDATE_SHOW_DISCOUNTS,\n});\n\nexport const updateShowDiscountsSuccess = () => ({\n  type: constants.UPDATE_SHOW_DISCOUNTS_SUCCESS,\n});\n\nexport const updateSelectedVacation = (vacationId) => ({\n  type: constants.UPDATE_SELECTED_VACATION,\n  vacationId,\n});\n\nexport const getSelectedVacation = (vacationId) => ({\n  type: constants.SELECTED_VACATION,\n  vacationId,\n});\n","/* eslint-disable no-param-reassign */\n/*\n *\n * LoginPage reducer\n *\n */\n\nimport { produce } from 'immer';\nimport { LOGIN_FIELD_CHANGE } from './constants';\n\nexport const initialState = {\n  username: '',\n  password: '',\n};\n\nconst loginPageReducer = (state = initialState, action) =>\n  produce(state, draft => {\n    switch (action.type) {\n      /**\n       * Login Field Change\n       */\n      case LOGIN_FIELD_CHANGE: {\n        if (action.fieldName === 'password') {\n          draft.password = action.value;\n          break;\n        }\n        draft.username = action.value;\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\nexport default loginPageReducer;\n","import produce from 'immer';\nimport * as constants from './constants';\n\nexport const initialState = {\n  vacations: [],\n  discounts: [],\n  showDiscounts: false,\n  selectedVacation: null,\n};\n\n/* eslint-disable no-param-reassign */\nconst Vacations = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case constants.GET_VACATIONS_SUCCESS:\n        draft.vacations = action.payload.vacations;\n        draft.discounts = action.payload.discounts;\n        break;\n      case constants.GET_VACATIONS_ERROR:\n        break;\n      case constants.UPDATE_SHOW_DISCOUNTS_SUCCESS:\n        draft.showDiscounts = !state.showDiscounts;\n        break;\n      case constants.SELECTED_VACATION:\n        draft.selectedVacation = action.vacationId;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default Vacations;\n","import * as constants from './constants';\n\nexport const getProfile = () => ({\n  type: constants.GET_PROFILE,\n});\n\nexport const getProfileSuccess = (payload) => ({\n  type: constants.GET_PROFILE_SUCCESS,\n  payload,\n});\n\nexport const getProfileError = (payload) => ({\n  type: constants.GET_PROFILE_ERROR,\n  payload,\n});\n\nexport const updateUserStatus = () => ({\n  type: constants.UPDATE_USER_STATUS,\n});\n\nexport const updateUserStatusSuccess = () => ({\n  type: constants.UPDATE_USER_STATUS_SUCCESS,\n});\n","import * as constants from './constants';\n\nexport const getVacationDetails = (vacationId) => ({\n  type: constants.GET_VACATIONDETAILS,\n  vacationId,\n});\n\nexport const getVacationDetailsSuccess = (payload) => ({\n  type: constants.GET_VACATIONDETAILS_SUCCESS,\n  payload,\n});\n\nexport const getVacationDetailsError = (payload) => ({\n  type: constants.GET_VACATIONDETAILS_ERROR,\n  payload,\n});\n","/*\n *\n * LoginPage constants\n *\n */\n\nexport const DEFAULT_ACTION = 'app/LoginPage/DEFAULT_ACTION';\nexport const LOGIN_FIELD_CHANGE = 'app/LoginPage/LOGIN_FIELD_CHANGE';\n","import produce from 'immer';\nimport * as constants from './constants';\n\nconst statuses = {\n  active: 'active',\n  inactive: 'inactive',\n};\n\nexport const initialState = {\n  user: {},\n  orders: [],\n  status: statuses.inactive,\n};\n\n/* eslint-disable no-param-reassign */\nconst Profile = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case constants.GET_PROFILE_SUCCESS:\n        draft.user = action.payload.user;\n        draft.orders = action.payload.orders;\n        break;\n      case constants.GET_PROFILE_ERROR:\n        break;\n      case constants.UPDATE_USER_STATUS_SUCCESS:\n        if (state.status === statuses.active) draft.status = statuses.inactive;\n        else draft.status = statuses.active;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default Profile;\n","import produce from 'immer';\nimport * as constants from './constants';\n\nexport const initialState = {\n  vacation: {},\n};\n\n/* eslint-disable no-param-reassign */\nconst VacationDetails = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case constants.GET_VACATIONDETAILS_SUCCESS:\n        draft.vacation = action.payload;\n        break;\n      case constants.GET_VACATIONDETAILS_ERROR:\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default VacationDetails;\n"],"sourceRoot":""}