{"version":3,"sources":["containers/ProfileContainer/components/BasicInfo.js","containers/ProfileContainer/components/OrdersHistory.js","containers/ProfileContainer/components/Profile.js","containers/ProfileContainer/meta/selectors.js","containers/ProfileContainer/index.js"],"names":["useStyles","makeStyles","theme","large","width","spacing","height","paper","padding","display","flexDirection","alignItems","justifyContent","React","memo","user","classes","console","count","Paper","root","Avatar","alt","className","src","avatar","Typography","component","variant","name","email","phoneNumber","joined","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","background","default","TableRow","table","minWidth","orders","TableContainer","Table","aria-label","TableHead","align","TableBody","map","row","key","destination","scope","from","to","price","Profile","status","getProfile","updateUserStatus","useEffect","Grid","container","direction","Chip","onClick","label","style","select","state","profile","initialState","selectUser","selectOrders","selectStatus","mapDispatchToProps","ProfileContainer","connect"],"mappings":"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","file":"static/js/profile.94cc9649.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  paper: {\n    padding: '20px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}));\n\nconst BasicInfo = ({ user }) => {\n  const classes = useStyles();\n\n  console.count('BASIC_INFO');\n\n  return (\n    <Paper classes={{ root: classes.paper }}>\n      <Avatar alt='Remy Sharp' className={classes.large} src={user.avatar} />\n      <Typography component='h4' variant='h4'>\n        {user.name}\n      </Typography>\n      <Typography component='h5' variant='h5'>\n        {user.email}\n      </Typography>\n      <Typography component='h6' variant='h6'>\n        {user.phoneNumber}\n      </Typography>\n      <Typography component='h7' variant='h7'>\n        Joined At&#160; {user.joined}\n      </Typography>\n    </Paper>\n  );\n};\n\nBasicInfo.propTypes = {\n  user: PropTypes.object,\n};\n\nexport default React.memo(BasicInfo);\n","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nfunction OrdersHistory({ orders }) {\n  const classes = useStyles();\n\n  console.count('ORDERS_HISTORY');\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label='customized table'>\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Destination</StyledTableCell>\n            <StyledTableCell>From</StyledTableCell>\n            <StyledTableCell>To</StyledTableCell>\n            <StyledTableCell align='right'>Total</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders.map((row) => (\n            <StyledTableRow key={row.destination}>\n              <StyledTableCell component='th' scope='row'>\n                {row.destination}\n              </StyledTableCell>\n              <StyledTableCell>{row.from}</StyledTableCell>\n              <StyledTableCell>{row.to}</StyledTableCell>\n              <StyledTableCell align='right'>{row.price}&#36;</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nOrdersHistory.propTypes = {\n  orders: PropTypes.array,\n};\n\nexport default React.memo(OrdersHistory);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport BasicInfo from './BasicInfo';\nimport OrdersHistory from './OrdersHistory';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\n\nfunction Profile({ status, user, orders, getProfile, updateUserStatus }) {\n  useEffect(() => {\n    if (getProfile) {\n      getProfile();\n    }\n  }, []);\n\n  console.count('PROFILE');\n\n  return (\n    <Grid container direction='column' alignItems='center'>\n      <Chip\n        onClick={updateUserStatus}\n        label={status}\n        style={{\n          backgroundColor: status === 'active' ? 'green' : '',\n          color: status === 'active' ? 'white' : '',\n        }}\n      />\n      <BasicInfo user={user} />\n      <OrdersHistory orders={orders} />\n    </Grid>\n  );\n}\n\nProfile.propTypes = {\n  status: PropTypes.string,\n  user: PropTypes.object,\n  orders: PropTypes.array,\n  getProfile: PropTypes.func,\n  updateUserStatus: PropTypes.func,\n};\n\nexport default Profile;\n","import { initialState } from './reducer';\n/**\n * Get Profile\n * @param state\n * @returns {Object}\n */\nconst select = (state) => state.profile || initialState;\n\nexport const selectUser = (state) => select(state).user;\n\nexport const selectOrders = (state) => select(state).orders;\n\nexport const selectStatus = (state) => select(state).status;\n","import { connect } from 'react-redux';\nimport Profile from './components/Profile';\nimport { getProfile, updateUserStatus } from './meta/actions';\nimport { selectUser, selectOrders, selectStatus } from './meta/selectors';\n\nconst mapStateToProps = (state) => ({\n  user: selectUser(state),\n  orders: selectOrders(state),\n  status: selectStatus(state),\n});\n\nconst mapDispatchToProps = {\n  getProfile,\n  updateUserStatus,\n};\n\nconst ProfileContainer = connect(mapStateToProps, mapDispatchToProps)(Profile);\n\nexport default ProfileContainer;\n"],"sourceRoot":""}