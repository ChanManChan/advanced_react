{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","containers/VacationsContainer/components/DiscountsItems.js","containers/VacationsContainer/components/Discounts.js","containers/VacationsContainer/components/Vacation.js","containers/VacationsContainer/components/VacationsItems.js","containers/VacationsContainer/components/Vacations.js","containers/VacationsContainer/index.js"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","CardActionArea","children","focusVisibleClassName","ButtonBase","focusVisible","focusHighlight","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","MEDIA_COMPONENTS","CardMedia","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","undefined","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","CardActions","_props$disableSpacing","disableSpacing","spacing","alignItems","marginLeft","useStyles","makeStyles","paper","height","justifyContent","margin","DiscountsItems","displayDiscounts","discounts","useState","selected","setSelected","variant","List","aria-label","map","vac","ListItem","onClick","id","button","ListItemText","primary","destination","Discounts","updateShowDiscounts","Typography","Switch","checked","onChange","color","inputProps","maxWidth","Vacation","vacation","updateSelectedVacation","console","count","title","description","gutterBottom","price","Button","size","to","memo","vacations","vacationsRoot","gridColumnGap","gridRowGap","gridTemplateColumns","Vacations","boolDiscounts","getVacations","selectedVacation","useEffect","VacationsContainer","connect","state","showDiscounts","makeSelectVacations","selectDiscounts","selectSelectedVacation","dispatch"],"mappings":"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","file":"static/js/vacations.a3ce7243.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  paper: {\n    width: 500,\n    height: 150,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n    margin: '15px',\n  },\n});\n\nconst DiscountsItems = ({ displayDiscounts, discounts }) => {\n  const [selected, setSelected] = useState('');\n  const classes = useStyles();\n\n  return (\n    <>\n      {displayDiscounts ? (\n        <Paper variant='outlined'>\n          <List component='nav' aria-label='secondary mailbox folders'>\n            {discounts.map((vac) => (\n              <ListItem\n                onClick={() => setSelected(vac.id)}\n                button\n                selected={vac.id === selected}\n              >\n                <ListItemText primary={`${vac.destination} 15% OFF`} />\n              </ListItem>\n            ))}\n          </List>\n        </Paper>\n      ) : (\n        <Paper classes={{ root: classes.paper }}>Discounts are hidden</Paper>\n      )}\n    </>\n  );\n};\n\nDiscountsItems.propTypes = {\n  discounts: PropTypes.array,\n};\n\nexport default DiscountsItems;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport DiscountsItems from './DiscountsItems';\n\nconst Discounts = ({ displayDiscounts, updateShowDiscounts, discounts }) => {\n  return (\n    <>\n      <Typography variant='h6' component='h6'>\n        Discounts\n      </Typography>\n      <Switch\n        checked={displayDiscounts}\n        onChange={updateShowDiscounts}\n        color='primary'\n        name='checkedB'\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />\n      <DiscountsItems\n        discounts={discounts}\n        displayDiscounts={displayDiscounts}\n      />\n    </>\n  );\n};\n\nDiscounts.propTypes = {\n  updateShowDiscounts: PropTypes.func,\n  displayDiscounts: PropTypes.bool,\n};\n\nexport default Discounts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 500,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport function Vacation({ vacation, updateSelectedVacation }) {\n  const classes = useStyles();\n\n  console.count('VACATION_CARD');\n\n  const handleVacationOnClick = () => updateSelectedVacation(vacation.id);\n\n  return (\n    <Card className={classes.root} onClick={handleVacationOnClick}>\n      <CardActionArea>\n        <CardMedia\n          component='img'\n          className={classes.media}\n          src={vacation.image}\n          title={vacation.description}\n        />\n        <CardContent>\n          <Typography gutterBottom variant='h5' component='h2'>\n            {vacation.destination}\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            {vacation.description}\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            Price: {vacation.price}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button variant='contained' size='small' color='primary'>\n          Order\n        </Button>\n        <Link to={`/vacation/${vacation.id}`}>\n          <Button size='small' color='secondary'>\n            Learn More\n          </Button>\n        </Link>\n      </CardActions>\n    </Card>\n  );\n}\n\nVacation.propTypes = {\n  vacation: PropTypes.object,\n  updateSelectedVacation: PropTypes.func,\n};\n\nexport default Vacation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Vacation from './Vacation';\n\nconst VacationsItems = ({ vacations, updateSelectedVacation }) => {\n  console.count('VacationsItems');\n  return vacations.map((vacation) => (\n    <Vacation\n      vacation={vacation}\n      updateSelectedVacation={updateSelectedVacation}\n    />\n  ));\n};\n\nVacationsItems.propTypes = {\n  vacations: PropTypes.array,\n  updateSelectedVacation: PropTypes.func,\n};\n\n//! Shallowly compare complex objects in the props object (Prevent re-rendering this component multiple times)\nexport default React.memo(VacationsItems);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Discounts from './Discounts';\nimport VacationsItems from './VacationsItems';\n\nconst useStyles = makeStyles({\n  vacationsRoot: {\n    display: 'grid',\n    gridColumnGap: '10px',\n    gridRowGap: '15px',\n    gridTemplateColumns: '2fr 2fr 2fr',\n  },\n});\n\nfunction Vacations({\n  boolDiscounts,\n  getVacations,\n  updateShowDiscounts,\n  vacations,\n  discounts,\n  selectedVacation,\n  updateSelectedVacation,\n}) {\n  useEffect(() => {\n    if (getVacations) {\n      getVacations();\n    }\n  }, []);\n  const classes = useStyles();\n\n  //! Avoid Reconciliation\n  // Every time we render the \"Vacations\" component, we're creating a new object of the \"vacations\". The map JS function returns a new array, and when this new array is passed to the \"VacationsItems\", the memo will check the previous prop and the new prop and its not the same reference!, we have two different objects over here but with the same content inside. <- Just giving reasons to react to re-render the component because the props has \"changed\".\n\n  // const newVacations = vacations.map((vacation) => ({\n  //   ...vacation,\n  //   price: 100,\n  // }));\n\n  //! This line (42) will create a new function every time this Vacations component re-render (Therefore the reference will be new everytime this function renders)\n  // Very bad practise to define callback inside the functional component\n  // const handleVacationOnClick = (vacationId) =>\n  //   updateSelectedVacation(vacationId);\n\n  //? SOLUTION\n  // 1> Define this callback inside every vacation\n\n  console.count('VACATIONS');\n\n  return (\n    <>\n      <Discounts\n        updateShowDiscounts={updateShowDiscounts}\n        displayDiscounts={boolDiscounts}\n        discounts={discounts}\n      />\n      <div className={classes.vacationsRoot}>\n        <VacationsItems\n          vacations={vacations}\n          updateSelectedVacation={updateSelectedVacation}\n        />\n      </div>\n    </>\n  );\n}\n\nVacations.propTypes = {\n  boolDiscounts: PropTypes.bool,\n  getVacations: PropTypes.func,\n  updateShowDiscounts: PropTypes.func,\n  vacations: PropTypes.array,\n  discounts: PropTypes.array,\n  selectedVacation: PropTypes.string,\n  updateSelectedVacation: PropTypes.func,\n};\n\nexport default Vacations;\n","import { connect } from 'react-redux';\nimport Vacations from './components/Vacations';\nimport {\n  getVacations,\n  updateShowDiscounts,\n  updateSelectedVacation,\n} from './meta/actions';\n\nimport {\n  makeSelectVacations,\n  showDiscounts,\n  selectDiscounts,\n  selectSelectedVacation,\n} from './meta/selectors';\n\nconst mapStateToProps = (state) => ({\n  boolDiscounts: showDiscounts(state),\n  vacations: makeSelectVacations(state),\n  discounts: selectDiscounts(state),\n  selectedVacation: selectSelectedVacation(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getVacations: () => dispatch(getVacations()),\n  updateShowDiscounts: () => dispatch(updateShowDiscounts()),\n  updateSelectedVacation: (id) => dispatch(updateSelectedVacation(id)),\n});\n\nconst VacationsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Vacations);\n\nexport default VacationsContainer;\n"],"sourceRoot":""}